{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","isClicked","message","this","setState","className","app","credentials","theme","typography","fontFamily","fontSize","colors","textColor","backgroundColor","primaryTextColor","primaryColor","titleColor","alertColor","borderColor","src","alt","componentId","dataField","categoryField","queryFormat","placeholder","iconPosition","autosuggest","filterLabel","size","sortBy","selectAllLabel","showCheckBox","showCount","showSearch","react","and","showFilter","URLParams","innerClass","label","input","data","start","end","showRadio","radio","range","rangeLabels","showCheckbox","value","pagination","paginationAt","pages","Loader","noResults","sortOptions","title","listItem","list","resultStats","resultsInfo","poweredBy","ResultCardsWrapper","map","item","style","marginRight","target","href","imdb_id","poster_path","original_title","tagline","vote_average","time_str","score","or_revenue","original_language","onClick","handleClick","bind","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3d8cd57.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ReactiveBase } from '@appbaseio/reactivesearch';\nimport { DataSearch } from '@appbaseio/reactivesearch';\nimport { MultiList } from '@appbaseio/reactivesearch';\nimport { SingleRange } from '@appbaseio/reactivesearch';\nimport { RangeSlider } from '@appbaseio/reactivesearch';\nimport { MultiDataList } from '@appbaseio/reactivesearch';\nimport { DateRange } from '@appbaseio/reactivesearch';\nimport { ReactiveList } from '@appbaseio/reactivesearch';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isClicked: false,\n      message: \"Show Filters\"\n    };\n  }\n\n  handleClick() {\n    this.setState({\n      isClicked: !this.state.isClicked,\n      message: this.state.isClicked ? \"Show Filters\" : \"Show Movies\"\n    });\n  }\n\n  render() {\n    return (\n      <div className = \"main-container\">\n        <ReactiveBase\n          app = \"MovieAppFinal\"\n\t  credentials = \"RxIAbH9Jc:6d3a5016-5e9d-448f-bd2b-63c80b401484\"\n          theme={{\n            typography: {\n              fontFamily:\n                  '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Noto Sans\", \"Ubuntu\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n              fontSize: \"16px\"\n            },\n            colors: {\n              textColor: \"#fff\",\n              backgroundColor: \"#212121\",\n              primaryTextColor: \"#fff\",\n              primaryColor: \"#2196F3\",\n              titleColor: \"#fff\",\n              alertColor: \"#d9534f\",\n              borderColor: \"#666\"\n            }\n          }}\n        >\n          <div className = \"navbar\">\n\t    <div className = \"logo-container\">\n\t      <img\n\t        className = \"app-logo\"\n\t    \tsrc = \"images/MovieDB.png\"\n\t    \talt = \"Powered by MovieDB\"\n\t      />\n\t    </div>\n\n            <div className = \"search-container\">\n\t      <DataSearch\n\t        componentId = \"mainSearch\"\n\t        dataField = {[ \"original_title\" ]}\n\t        categoryField = \"title\"\n\t        className = \"search-bar\"\n\t        queryFormat = \"and\"\n\t        placeholder = \"Search for movies\"\n\t        iconPosition = \"left\"\n\t        autosuggest = { false }\n\t        filterLabel = \"search\"\n\t      />\n\t    </div>\n\t  </div>\n\n\t    <div className = \"sub-container\">\n\t      <div\n\t        className = {\n\t\t  this.state.isClicked ? \"left-bar-optional\" : \"left-bar\"\n\t\t}\n\t      >\n\t      <div className = \"filter-heading center\">\n\t        <b>\n\t          {\" \"}\n\t          <i className = \"fa fa-pied-piper-alt\" /> Genres{\" \"}\n\t        </b>\n\t      </div>\n\n\t      <MultiList\n\t        componentId = \"genres-list\"\n\t        dataField = \"genres_data.raw\"\n\t        className = \"genres-filter\"\n\t        size = { 20 }\n\t        sortBy = \"asc\"\n\t        queryFormat = \"or\"\n\t        selectAllLabel = \"All Genres\"\n\t        showCheckBox = { true }\n\t        showCount = { true }\n\t        showSearch = { true }\n\t        placeholder = \"Search for a Genre\"\n\t        react = {{\n\t          and: [\n\t            \"mainSearch\",\n                    \"results\",\n\t            \"date-filter\",\n\t            \"RangeSlider\",\n\t            \"language-list\",\n\t            \"revenue-list\"\n                  ]\n\t        }}\n\t        showFilter = { true }\n\t        filterLabel = \"Genre\"\n\t        URLParams = { false }\n\t        innerClass = {{\n\t          label: \"list-item\",\n\t          input: \"list-input\"\n                }}\n\t      />\n\t    <hr className = \"blue\" />\n\t    <div className = \"filter-heading center\">\n\t      <b>\n\t        {\" \"}\n\t        <i className = \"fa fa-dollar\" /> Revenue{\" \"}\n              </b>\n\t    </div>\n            <SingleRange\n\t      componentId = \"revenue-list\"\n\t      dataField = \"ran_revenue\"\n\t      className = \"revenue-filter\"\n\t      data = {[\n\t        { start: 0, end: 1000, label: \"< 1M\" },\n                { start: 1000, end: 100000, label: \"1M-100M\" },\n\t        { start: 100000, end: 500000, label: \"100M-500M\" },\n\t        { start: 500000, end: 1000000, label: \"500M-1B\" },\n\t        { start: 1000000, end: 10000000, label: \"> 1B\" }\n\t      ]}\n\t      showRadio = { true }\n\t      showFilter = { true }\n\t      filterLabel = \"Revenue\"\n\t      URLParams = { false }\n\t      innerClass = {{\n\t        label: \"revenue-label\",\n\t        radio: \"revenue-radio\"\n\t      }}\n\t    />\n            <hr className = \"blue\" />\n\n\t    <div className = \"filter-heading center\">\n\t      <b>\n\t        <i className = \"fa fa-star\" /> Ratings\n\t      </b>\n\t    </div>\n\n\t    <RangeSlider\n\t      componentId = \"RangeSlider\"\n\t      dataField = \"vote_average\"\n\t      className = \"review-filter\"\n\t      range = {{\n\t        start: 0,\n\t        end: 10\n\t      }}\n\t      rangeLabels = {{\n\t        start: \"0\",\n\t        end: \"10\"\n\t      }}\n\t      react = {{\n\t        and: [\n\t          \"mainSearch\",\n\t          \"results\",\n\t          \"language-list\",\n\t          \"date-filter\",\n\t          \"genres-list\",\n\t          \"revenue-list\"\n\t        ]\n\t      }}\n\t    />\n\t    <hr className = \"blue\" />\n\t    <div className = \"filter-heading center\">\n\t      <b>\n\t        {\" \"}\n\t        <i className = \"fa fa-language\" /> Languages{\" \"}\n\t      </b>\n\t    </div>\n            <MultiDataList\n\t      componentId = \"language-list\"\n\t      dataField = \"original_language.raw\"\n\t      className = \"language-filter\"\n\t      size = { 100 }\n\t      sortBy = \"asc\"\n\t      queryFormat = \"or\"\n              selectAllLabel = \"All Languages\"\n\t      showCheckbox = { true }\n\t      showSearch = { true }\n\t      placeholder = \"Search for a language\"\n\t      react = {{\n\t        and: [\n\t          \"mainSearch\",\n\t          \"results\",\n\t          \"date-filter\",\n\t          \"RangeSlider\",\n\t          \"genres-list\",\n\t          \"revenue-list\"\n\t        ]\n\t      }}\n\t      data = {[\n\t        {\n\t          label: \"English\",\n\t          value: \"English\"\n\t        },\n\t        {\n\t          label: \"Chinese\",\n\t          value: \"Chinese\"\n\t        },\n\t        {\n\t          label: \"Turkish\",\n\t          value: \"Turkish\"\n\t        },\n\t        {\n                  label: \"Swedish\",\n\t          value: \"Swedish\"\n\t        },\n                {\n\t          label: \"Russian\",\n\t          value: \"Russian\"\n                },\n                {\n                  label: \"Portuguese\",\n\t          value: \"Portuguese\"\n                },\n\t        {\n\t          label: \"Korean\",\n\t          value: \"Korean\"\n\t        },\n\t        {\n\t          label: \"Japanese\",\n\t          value: \"Japanese\"\n\t        },\n\t        {\n\t          label: \"Italian\",\n\t          value: \"Italian\"\n\t        },\n\t        {\n\t          label: \"Hindi\",\n\t          value: \"Hindi\"\n\t        },\n                {\n                  label: \"French\",\n\t          value: \"French\"\n\t        },\n                {\n\t          label: \"Finnish\",\n\t          value: \"Finnish\"\n\t        },\n\t        {\n\t          label: \"Spanish\",\n\t          value: \"Spanish\"\n\t        },\n\t        {\n\t          label: \"Deutsch\",\n\t          value: \"Deutsch\"\n\t        }\n              ]}\n              showFilter = { true }\n\t      filterLabel = \"Language\"\n\t      URLParams = { false }\n\t      innerClass = {{\n\t        label: \"list-item\",\n\t        input: \"list-input\"\n\t      }}\n\t    />\n\t    <hr className = \"blue\" />\n\n\t    <div className = \"filter-heading center\">\n\t      <b>\n\t        {\" \"}\n\t        <i className = \"fa fa-calendar\" /> Release Date{\" \"}\n\t      </b>\n\t    </div>\n            <DateRange\n\t      componentId = \"date-filter\"\n\t      dataField = \"release_date\"\n\t      className = \"datePicker\"\n            />\n\t  </div>\n\t  <div\n\t    className = {\n\t      this.state.isClicked\n\t        ? \"result-container-optional\"\n\t\t: \"result-container\"\n\t    }\n\t  >\n\n            <ReactiveList\n\t      componentId = \"results\"\n\t      dataField = \"original_title\"\n\t      react = {{\n\t        and: [\n\t          \"mainSearch\",\n\t          \"RangeSlider\",\n\t\t  \"language-list\",\n\t\t  \"date-filter\",\n\t\t  \"genres-list\",\n\t\t  \"revenue-list\"\n\t        ]\n              }}\n\t      pagination = { true }\n\t      className = \"Result_card\"\n\t      paginationAt = \"bottom\"\n\t      pages = { 7 }\n\t      size = { 12 }\n\t      Loader = \"Loading...\"\n\t      noResults = \"No results were found\"\n\t      sortOptions = {[\n\t        {\n\t\t  dataField: \"revenue\",\n\t\t  sortBy: \"desc\",\n\t\t  label: \"Sort by Revenue(High to Low) \\u00A0\"\n\t\t},\n\t\t{\n\t\t  dataField: \"popularity\",\n\t\t  sortBy: \"desc\",\n\t\t  label: \"Sort by Popularity(High to Low)\\u00A0 \\u00A0\"\n\t        },\n\t\t{\n\t\t  dataField: \"vote_average\",\n\t\t  sortBy: \"desc\",\n\t\t  label: \"Sort by Ratings(High to Low) \\u00A0\"\n\t\t},\n\t\t{\n\t\t  dataField: \"original_title.raw\",\n\t\t  sortBy: \"asc\",\n\t\t  label: \"Sort by Title(A-Z) \\u00A0\"\n\t\t}\n              ]}\n\t      innerClass = {{\n\t        title: \"result-title\",\n\t\tlistItem: \"result-item\",\n\t\tlist: \"list-container\",\n\t\tsortOptions: \"sort-options\",\n                resultStats: \"result-stats\",\n\t        resultsInfo: \"result-list-info\",\n\t\tpoweredBy: \"powered-by\"\n              }}\n\t    >\n\t      {({ data }) => (\n\t        <ReactiveList.ResultCardsWrapper>\n\t\t  { data.map(item => (\n\t\t    <div\n\t\t      style = {{ marginRight: \"15px\" }}\n\t\t      className = \"main-description\"\n\t\t    >\n\t\t      <div className = \"ih-item square effect6 top_to_bottom\">\n\t\t        <a\n\t\t\t  target = \"#\"\n\t\t\t  href = { \"https://www.imdb.com/title/\" + item.imdb_id }\n\t\t\t>\n\t\t        <div className = \"img\">\n\t\t\t  <img\n\t\t\t    src = {\n\t\t\t      \"https://image.tmdb.org/t/p/w500\" +\n\t\t\t      item.poster_path\n\t\t\t    }\n\t\t\t    alt = { item.original_title }\n\t\t\t    className = \"result-image\"\n\t\t\t  />\n\t\t\t</div>\n\t\t\t<div className = \"info colored\">\n\t\t\t  <h3 className = \"overlay-title\">\n\t\t\t    { item.original_title }\n\t\t\t  </h3>\n\n\t\t\t<div className = \"overlay-description\">\n\t\t\t  { item.tagline }\n\t\t\t</div>\n\n\t\t\t<div className = \"overlay-info\">\n\t\t\t  <div className = \"rating-time-score-container\">\n\t\t\t    <div className = \"sub-title Rating-data\">\n\t\t\t      <b>\n\t\t\t        Imdb\n\t\t\t        <span className = \"details\">\n\t\t\t      {\" \"}\n\t\t\t          { item.vote_average}/10{\" \"}\n\t\t\t        </span>\n\t\t\t      </b>\n\t\t\t    </div>\n\t\t\t    <div className = \"time-data\">\n\t\t\t      <b>\n\t\t\t    <span className = \"time\">\n\t\t\t      <i className = \"fa fa-clock-o\" />{\" \"}\n\t\t\t    </span>{\" \"}\n\t\t\t      <span className = \"details\">\n\t\t\t        { item.time_str }\n\t\t\t      </span>\n\t\t\t      </b>\n\t\t\t    </div>\n\t\t\t    <div className = \"sub-title Score-data\">\n\t\t\t      <b>\n\t\t\t        Score:\n\t\t\t        <span className = \"details\">\n\t\t\t      {\" \"}\n\t\t\t          { item.score }\n\t\t\t         </span>\n\t\t\t       </b>\n\t\t\t     </div>\n\t\t\t   </div>\n\t\t\t  <div className = \"revenue-lang-container\">\n\t\t\t    <div className = \"revenue-data\">\n\t\t\t      <b>\n\t\t\t        <span>Revenue:</span>{\" \"}\n\t\t\t        <span className = \"details\">\n\t\t\t      {\" \"}\n\t\t\t          ${item.or_revenue}\n\t\t\t        </span>{\" \"}\n\t\t\t      </b>\n\t\t\t    </div>\n\n\t\t\t    <div className = \"sub-title language-data\">\n\t\t\t      <b>\n\t\t\t        Language:\n\t\t\t        <span className = \"details\">\n\t\t\t      {\" \"}\n\t\t\t          { item.original_language }\n\t\t\t        </span>\n\t\t\t      </b>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</div>\n\t              </div>\n\t\t    </a>\n\t          </div>\n\t        </div>\n\t      ))}\n            </ReactiveList.ResultCardsWrapper>\n\t  )}\t\t  \n    </ReactiveList>\n  </div>\n  \n  <button\n    className = \"toggle-button\"\n    onClick = { this.handleClick.bind(this) }\n  >\n    { this.state.message }\n  </button>\n</div>\n</ReactiveBase>\n</div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}